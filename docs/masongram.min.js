"use strict";window.masongram=$.fn.masongram=function(t){return this.each(function(){new Masongram(this,t)})};var Masongram=function(){function t(t,o){var n=this;i.forEach(function(t){n.require(t)}),r||(this.configure(o),this.setup(t))}var o,n,e,a,i=["jQuery","Masonry"],r=!1;return t.prototype={require:function(t){var o=void 0!==window[t];return o||(r=!0,console.error("Dependency unavailable: "+t)),o},configure:function(t){o=$.extend(!0,{endpoint:"users/self",loop:!1,count:10,offset:10,size:"low_resolution",caption:"{caption}"},t)},setup:function(t){var a=this;n=$("<div>").attr({class:"masongram-container"}).appendTo(t),$("<div>").attr({class:"masongram-image-sizer masongram-image-size-"+o.size}).appendTo(n),n.masonry({itemSelector:".masongram-image-container",columnWidth:".masongram-image-sizer",percentPosition:!0}),e=new Resource(o),e.on("loaded",function(t){a.append(t)});var i;$(window).scroll(function(){i||(i=setTimeout(function(){n.imagesLoaded().progress(function(){$(window).scrollTop()+$(window).height()>$(document).height()*(1-o.offset/100)&&a.load()}),i=null},100))}),n.on("layoutComplete",function(){n.imagesLoaded().progress(function(){$("body").height()<$(window).height()&&a.load()})}),a.load()},load:function(){a||(a=!0,e.load())},append:function(t){t.forEach(function(e,i){var r=new Tile(e,{caption:o.caption,size:o.size}),c=r.getObject();setTimeout(function(){c.imagesLoaded().progress(function(){n.append(c).masonry("appended",c),i+1===t.length&&(a=!1,$(window).trigger("scroll"))})},200*i)})}},t}(),Resource=function(){function t(t){o=t,n="https://api.instagram.com/v1/"+o.endpoint+"/media/recent/"}var o,n;return t.prototype={load:function(){if(n){var t=this,e=$.Deferred();return $.ajax({type:"POST",url:n,data:{access_token:o.access_token,count:o.count},dataType:"jsonp"}).success(function(a){$(t).trigger("loaded",[a.data]),e.resolve(a.data),o.loop||(n=!(!a.pagination||!a.pagination.next_url)&&a.pagination.next_url)}).error(function(){e.reject("Error fetching data")}),e.promise()}},on:function(t,o){$(this).on(t,function(t,n){o(n)})}},t}(),Tile=function(){function t(t,o){n=t,e=o,this.parseLocation(),this.create()}var o,n,e,a="NO_DATA";return t.prototype={create:function(){o=$("<a>").attr({href:n.link,target:"_blank",class:"masongram-image-container masongram-image-size-"+e.size});var t=$("<img>").attr({src:n.images[e.size].url,width:n.images[e.size].width,height:n.images[e.size].height,class:"masongram-image"});t.appendTo(o);var a=$("<div>",{class:"masongram-image-caption-container"}),i=$("<div>",{class:"masongram-image-caption"});n.caption&&n.caption.text&&i.html(this.parseCaption()),i.appendTo(a),a.appendTo(o)},getObject:function(){return o},parseLocation:function(){if(n.caption&&n.caption.text&&/@[\d]+\.[\d]+,[\d]+\.[\d]+/.test(n.caption.text)){var t=n.caption.text.match(/@([\d]+\.[\d]+),([\d]+\.[\d]+)/);n.caption.text=n.caption.text.replace(/\s*@([\d]+\.[\d]+),([\d]+\.[\d]+)/,""),n.location={latitude:t[1],longitude:t[2]}}},parseCaption:function(){var t=e.caption;if(/{.*}/.test(t)){var o=t.match(/{([^}]+)}/g);o.forEach(function(o){switch(o){case"{location}":t=t.replace(o,n.location&&void 0!==n.location.latitude&&void 0!==n.location.longitude?n.location.latitude+","+n.location.longitude:a);break;case"{latitude}":t=t.replace(o,n.location&&void 0!==n.location.latitude?n.location.latitude:a);break;case"{longitude}":t=t.replace(o,n.location&&void 0!==n.location.longitude?n.location.longitude:a);break;case"{caption}":t=t.replace(o,n.caption&&void 0!==n.caption.text?n.caption.text:a);break;case"{likes}":t=t.replace(o,n.likes&&void 0!==n.likes.count?n.likes.count:a)}})}return t}},t}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
