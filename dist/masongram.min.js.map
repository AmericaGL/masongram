{"version":3,"sources":["init.js","masongram.js","resouorce.js","tile.js"],"names":["window","masongram","$","fn","options","this","each","Masongram","$element","self","_dependencies","forEach","name","require","_error","configure","setup","_config","_$container","_resource","_inProgress","prototype","result","undefined","console","error","extend","endpoint","loop","count","offset","size","caption","attr","class","appendTo","masonry","itemSelector","columnWidth","percentPosition","Resource","on","items","append","scrollTimeout","scroll","setTimeout","imagesLoaded","progress","scrollTop","height","document","load","item","index","tile","Tile","$object","getObject","length","trigger","config","_url","deferred","Deferred","ajax","type","url","data","access_token","dataType","success","response","resolve","pagination","next_url","reject","promise","callback","event","_data","parseLocation","create","_$object","_NO_DATA","tabindex","$img","src","images","width","$captionContainer","$caption","text","html","parseCaption","test","location","match","replace","latitude","longitude","matches","likes","link"],"mappings":"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","file":"masongram.min.js","sourcesContent":["'use strict';\n\nwindow.masongram = $.fn.masongram = function (options) {\n  return this.each(function () {\n    new Masongram(this, options);\n  });\n};\n","'use strict';\n\nvar Masongram = (function () {\n\n  var _dependencies = [\n    'jQuery',\n    'Masonry',\n  ];\n\n  var _error = false;\n  var _config;\n  var _$container;\n  var _resource;\n  var _inProgress;\n\n  function Masongram($element, options) {\n    var self = this;\n\n    _dependencies.forEach(function (name) {\n      self.require(name);\n    });\n\n    if (_error) {\n      return;\n    }\n\n    this.configure(options);\n    this.setup($element);\n  }\n\n  Masongram.prototype = {\n\n    require: function (name) {\n      var result = window[ name ] !== undefined;\n      if (!result) {\n        _error = true;\n        console.error('Dependency unavailable: ' + name);\n      }\n      return result;\n    },\n\n    configure: function (options) {\n      _config = $.extend(true, {\n        endpoint: 'users/self',\n        loop: false,\n        count: 10,\n        offset: 10,\n        size: 'low_resolution',\n        caption: '{caption}',\n      }, options);\n    },\n\n    setup: function ($element) {\n      var self = this;\n      _$container = $('<div>')\n        .attr({\n          class: 'masongram-container',\n        })\n        .appendTo($element);\n\n      $('<div>')\n        .attr({\n          class: 'masongram-image-sizer masongram-image-size-' + _config.size,\n        })\n        .appendTo(_$container);\n\n      _$container.masonry({\n        itemSelector: '.masongram-image-container',\n        columnWidth: '.masongram-image-sizer',\n        percentPosition: true,\n      });\n\n      _resource = new Resource(_config);\n\n      _resource.on('loaded', function (items) {\n        self.append(items);\n      });\n\n      // load images when scrolled close to bottom\n      var scrollTimeout;// throttle\n      $(window).scroll(function () {\n        if (!scrollTimeout) {\n          scrollTimeout = setTimeout(function () {\n            _$container.imagesLoaded().progress(function () {\n              if ($(window).scrollTop() + $(window).height() > $(document).height() * (1 - _config.offset / 100)) {\n                self.load();\n              }\n            });\n            scrollTimeout = null;\n          }, 100);\n        }\n      });\n\n      // fill window if there is white space left\n      _$container.on('layoutComplete', function () {\n        _$container.imagesLoaded().progress(function () {\n          if ($('body').height() < $(window).height()) {\n            self.load();\n          }\n        });\n      });\n\n      self.load();\n    },\n\n    load: function () {\n      if (_inProgress) {\n        return;\n      }\n      _inProgress = true;\n      _resource.load();\n    },\n\n    append: function (items) {\n      items.forEach(function (item, index) {\n        var tile = new Tile(item, {\n          caption: _config.caption,\n          size: _config.size,\n        });\n        var $object = tile.getObject();\n        setTimeout(function () {\n          $object.imagesLoaded().progress(function () {\n            _$container.append($object).masonry('appended', $object);\n            if (index + 1 === items.length) {\n              _inProgress = false;\n              $(window).trigger('scroll');\n            }\n          });\n        }, index * 200);\n      });\n    },\n  };\n\n  return Masongram;\n\n})();\n","'use strict';\n\nvar Resource = (function () {\n\n  var _config;\n  var _url;\n\n  function Resource(config) {\n    _config = config;\n    _url = 'https://api.instagram.com/v1/' + _config.endpoint + '/media/recent/';\n  }\n\n  Resource.prototype = {\n\n    load: function () {\n      if (!_url) {\n        return;\n      }\n\n      var self = this;\n      var deferred = $.Deferred();\n\n      $.ajax({\n        type: 'POST',\n        url: _url,\n        data: {\n          access_token: _config.access_token,\n          count: _config.count,\n        },\n        dataType: 'jsonp',\n      }).success(function (response) {\n        $(self).trigger('loaded', [ response.data ]);\n        deferred.resolve(response.data);\n        if (!_config.loop) {\n          // Used for testing\n          _url = response.pagination && response.pagination.next_url ? response.pagination.next_url : false;\n        }\n      }).error(function () {\n        deferred.reject('Error fetching data');\n      });\n\n      return deferred.promise();\n    },\n\n    on: function (name, callback) {\n      $(this).on(name, function (event, data) {\n        callback(data);\n      });\n    },\n\n  };\n\n  return Resource;\n\n})();\n","'use strict';\n\nvar Tile = (function () {\n\n  var\n    _$object,\n    _data,\n    _config,\n    _NO_DATA = 'NO_DATA';\n\n  function Tile(data, config) {\n    _data = data;\n    _config = config;\n    this.parseLocation();\n    this.create();\n  }\n\n  Tile.prototype = {\n\n    create: function () {\n      _$object = $('<a>').attr({\n        tabindex: 0,\n        class: 'masongram-image-container masongram-image-size-' + _config.size,\n      });\n\n      var $img = $('<img>').attr({\n        src: _data.images[ _config.size ].url,\n        width: _data.images[ _config.size ].width,\n        height: _data.images[ _config.size ].height,\n        class: 'masongram-image',\n      });\n\n      $img.appendTo(_$object);\n\n      var $captionContainer = $('<div>', {\n        class: 'masongram-image-caption-container',\n      });\n\n      var $caption = $('<div>', {\n        class: 'masongram-image-caption',\n      });\n\n      if (_data.caption && _data.caption.text) {\n        $caption.html(this.parseCaption());\n      }\n\n      $caption.appendTo($captionContainer);\n      $captionContainer.appendTo(_$object);\n    },\n\n    getObject: function () {\n      return _$object;\n    },\n\n    parseLocation: function () {\n      if (_data.caption && _data.caption.text && /@[\\d]+\\.[\\d]+,[\\d]+\\.[\\d]+/.test(_data.caption.text)) {\n        var location = _data.caption.text.match(/@([\\d]+\\.[\\d]+),([\\d]+\\.[\\d]+)/);\n        _data.caption.text = _data.caption.text.replace(/\\s*@([\\d]+\\.[\\d]+),([\\d]+\\.[\\d]+)/, '');\n        _data.location = {\n          latitude: location[ 1 ],\n          longitude: location[ 2 ],\n        };\n      }\n    },\n\n    parseCaption: function () {\n      var html = _config.caption;\n\n      if (/{.*}/.test(html)) {\n        var matches = html.match(/{([^}]+)}/g);\n        matches.forEach(function (match) {\n          switch (match) {\n            case '{location}':\n              html = html.replace(match, _data.location && _data.location.latitude !== undefined && _data.location.longitude !== undefined ? (_data.location.latitude + ',' + _data.location.longitude) : _NO_DATA);\n              break;\n            case '{latitude}':\n              html = html.replace(match, _data.location && _data.location.latitude !== undefined ? _data.location.latitude : _NO_DATA);\n              break;\n            case '{longitude}':\n              html = html.replace(match, _data.location && _data.location.longitude !== undefined ? _data.location.longitude : _NO_DATA);\n              break;\n            case '{caption}':\n              html = html.replace(match, _data.caption && _data.caption.text !== undefined ? _data.caption.text : _NO_DATA);\n              break;\n            case '{likes}':\n              html = html.replace(match, _data.likes && _data.likes.count !== undefined ? _data.likes.count : _NO_DATA);\n              break;\n            case '{link}':\n              html = html.replace(match, _data.link ? _data.link : _NO_DATA);\n              break;\n          }\n        });\n      }\n\n      return html;\n    },\n\n  };\n\n  return Tile;\n\n})();\n"]}